#ifndef USER_CONFIG_H
#define USER_CONFIG_H

#ifdef __cplusplus
extern "C" {
#endif

// =============================================================================
// ПОЛЬЗОВАТЕЛЬСКИЕ НАСТРОЙКИ СИСТЕМЫ
// =============================================================================

// -----------------------------------------------------------------------------
// Настройки мотора и редуктора
// -----------------------------------------------------------------------------
#define MOTOR_GEAR_RATIO                19.2f      // Передаточное число редуктора
#define MOTOR_STEPS_PER_REVOLUTION      200        // Шагов на полный оборот мотора (без редуктора)
#define MOTOR_MICROSTEPS                16         // Количество микрошагов
#define MOTOR_DEFAULT_SPEED             500        // Скорость по умолчанию
#define MOTOR_DEFAULT_ACCELERATION      250        // Ускорение по умолчанию

// Полное количество шагов на один оборот выходного вала (с редуктором и микрошагами)
#define MOTOR_TOTAL_STEPS_PER_OUTPUT_REVOLUTION  (int32_t)(MOTOR_STEPS_PER_REVOLUTION * MOTOR_MICROSTEPS * MOTOR_GEAR_RATIO)

// Количество шагов на 360 градусов (1 оборот мотора с учетом микрошагов)
#define MOTOR_STEPS_PER_360_DEGREE   (MOTOR_STEPS_PER_REVOLUTION * 32) // 200*32=6400

// -----------------------------------------------------------------------------
// Настройки сканирования
// -----------------------------------------------------------------------------
#define SCAN_DEFAULT_OSCILLATION_ANGLE  180        // Угол размаха по умолчанию (в шагах выходного вала)
#define SCAN_POSITION_TOLERANCE         10         // Допустимая погрешность позиционирования (шаги)
#define SCAN_POSITION_CHECK_INTERVAL    200        // Интервал проверки позиции (мс)
#define SCAN_PAUSE_BETWEEN_MOVES        500        // Пауза между движениями (мс)
#define SCAN_SPEED                      500        // Скорость движения в режиме сканирования (шаги/сек)
#define SCAN_ACCELERATION               250        // Ускорение в режиме сканирования (шаги/сек^2)

// -----------------------------------------------------------------------------
// Настройки Flash памяти
// -----------------------------------------------------------------------------
#define FLASH_DEFAULT_OSCILLATION_ANGLE 180        // Значение угла размаха по умолчанию в Flash

// -----------------------------------------------------------------------------
// Настройки NRF24
// -----------------------------------------------------------------------------
#define NRF24_CHANNEL                   76         // Канал радиосвязи
#define NRF24_PAYLOAD_SIZE              32         // Размер пакета данных

// -----------------------------------------------------------------------------
// Вспомогательные макросы для конвертации углов
// -----------------------------------------------------------------------------

/**
 * @brief Конвертирует градусы в шаги выходного вала
 * @param degrees угол в градусах
 * @return количество шагов
 */
#define DEGREES_TO_STEPS(degrees) \
    (int32_t)((degrees) * MOTOR_TOTAL_STEPS_PER_OUTPUT_REVOLUTION / 360.0f)

/**
 * @brief Конвертирует шаги выходного вала в градусы
 * @param steps количество шагов
 * @return угол в градусах
 */
#define STEPS_TO_DEGREES(steps) \
    ((steps) * 360.0f / MOTOR_TOTAL_STEPS_PER_OUTPUT_REVOLUTION)

// -----------------------------------------------------------------------------
// Настройки энкодера
// -----------------------------------------------------------------------------
#define ENCODER_PULSES_PER_360_DEGREE  0x4000    // Пульсов энкодера на 1 оборот (360 градусов)

// -----------------------------------------------------------------------------
// Отладочные настройки
// -----------------------------------------------------------------------------
// #define DEBUG_MOTOR_MOVEMENTS          // Раскомментировать для отладки движений мотора
// #define DEBUG_SCAN_VERBOSE             // Раскомментировать для подробной отладки сканирования
// #define DEBUG_FLASH_OPERATIONS         // Раскомментировать для отладки Flash операций

#ifdef __cplusplus
}
#endif

#endif // USER_CONFIG_H
