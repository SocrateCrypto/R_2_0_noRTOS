#ifndef USER_CONFIG_H
#define USER_CONFIG_H

/**
 * @file user_config.h
 * @brief Пользовательские настройки системы
 * 
 * Этот файл содержит конфигурационные параметры, которые могут
 * изменяться в зависимости от конкретной установки и требований пользователя.
 */

// =============================================================================
// НАСТРОЙКИ РЕДУКТОРА
// =============================================================================

/**
 * @brief Передаточное число редуктора
 * 
 * Это отношение количества шагов двигателя к одному обороту выходного вала.
 * Например, если мотор делает 19.2 оборота для одного оборота выходного вала,
 * то передаточное число равно 19.2.
 */
#define GEARBOX_RATIO           19.2f

/**
 * @brief Количество шагов на один оборот двигателя
 * 
 * Это зависит от настройки микрошагов и характеристик конкретного шагового двигателя.
 * Обычно для шагового двигателя с разрешением 1.8° на шаг и микрошагами 1/16:
 * 200 шагов/оборот * 16 микрошагов = 3200 шагов/оборот
 */
#define MOTOR_STEPS_PER_REVOLUTION  3200

/**
 * @brief Количество шагов двигателя на один градус выходного вала
 * 
 * Расчет: (MOTOR_STEPS_PER_REVOLUTION * GEARBOX_RATIO) / 360°
 * Для редуктора 19.2 и 3200 шагов/оборот:
 * (3200 * 19.2) / 360 = 170.67 шагов/градус выходного вала
 */
#define MOTOR_STEPS_PER_OUTPUT_DEGREE  ((MOTOR_STEPS_PER_REVOLUTION * GEARBOX_RATIO) / 360.0f)

// =============================================================================
// НАСТРОЙКИ СКАНИРОВАНИЯ
// =============================================================================

/**
 * @brief Время паузы между сменой направления (в миллисекундах)
 */
#define SCAN_PAUSE_TIME_MS      500

/**
 * @brief Погрешность позиционирования (в шагах двигателя)
 * 
 * Допустимое отклонение от целевой позиции для считания, что позиция достигнута.
 */
#define SCAN_POSITION_TOLERANCE 10

/**
 * @brief Погрешность позиционирования в режиме сканирования (в отсчетах энкодера)
 * 
 * Допустимое отклонение от целевой позиции в энкодерных отсчетах.
 * Увеличено для более надежного срабатывания: 45.51 * 10 ≈ 455 отсчетов ≈ 10°
 */
#define SCAN_ENCODER_TOLERANCE 500

// =============================================================================
// НАСТРОЙКИ ЭНКОДЕРА
// =============================================================================

/**
 * @brief Количество отсчетов энкодера на один оборот выходного вала
 * 
 * Энкодер выдает 16384 (0x4000) отсчетов на полный оборот выходного вала.
 * Это значение определяется конструкцией энкодера и настройками контроллера MKS.
 */
#define ENCODER_COUNTS_PER_REVOLUTION   16384

/**
 * @brief Количество отсчетов энкодера на один градус выходного вала
 * 
 * Расчет: ENCODER_COUNTS_PER_REVOLUTION / 360°
 * 16384 / 360 = 45.51 отсчетов/градус
 */
#define ENCODER_COUNTS_PER_DEGREE  ((float)ENCODER_COUNTS_PER_REVOLUTION / 360.0f)

// =============================================================================
// ВСПОМОГАТЕЛЬНЫЕ МАКРОСЫ
// =============================================================================

/**
 * @brief Преобразование угла в градусах в шаги двигателя
 * @param degrees Угол в градусах выходного вала
 * @return Количество шагов двигателя
 */
#define DEGREES_TO_MOTOR_STEPS(degrees) ((int32_t)((degrees) * MOTOR_STEPS_PER_OUTPUT_DEGREE))

/**
 * @brief Преобразование шагов двигателя в градусы выходного вала
 * @param steps Количество шагов двигателя
 * @return Угол в градусах выходного вала
 */
#define MOTOR_STEPS_TO_DEGREES(steps) ((float)(steps) / MOTOR_STEPS_PER_OUTPUT_DEGREE)

/**
 * @brief Преобразование угла в градусах в отсчеты энкодера
 * @param degrees Угол в градусах выходного вала
 * @return Количество отсчетов энкодера
 */
#define DEGREES_TO_ENCODER_COUNTS(degrees) ((int32_t)((degrees) * ENCODER_COUNTS_PER_DEGREE))

/**
 * @brief Преобразование отсчетов энкодера в градусы выходного вала
 * @param counts Количество отсчетов энкодера
 * @return Угол в градусах выходного вала
 */
#define ENCODER_COUNTS_TO_DEGREES(counts) ((float)(counts) / ENCODER_COUNTS_PER_DEGREE)

#endif // USER_CONFIG_H
